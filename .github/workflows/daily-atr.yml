name: Daily ATR Calculator - Multi Ticker

# Run at midnight Eastern Time on weekdays (actually early morning of trading day)
on:
  schedule:
    # 05:00 UTC = 12:00 AM ET (during standard time)
    # 04:00 UTC = 12:00 AM ET (during daylight time)  
    - cron: '0 5 * * 2-6'  # Tue-Sat at 5:00 AM UTC (EST) = Mon-Fri midnight ET
    - cron: '0 4 * * 2-6'  # Tue-Sat at 4:00 AM UTC (EDT) = Mon-Fri midnight ET
  
  # Allow manual triggering for testing
  workflow_dispatch:

jobs:
  calculate-atr:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install yfinance pandas pytz
    
    - name: Run Multi-Ticker ATR Calculator
      run: |
        echo "üîÑ Starting daily multi-ticker ATR calculation..."
        python daily_atr_updater.py
        echo "‚úÖ Multi-ticker ATR calculation completed"
    
    - name: Check if JSON was created
      run: |
        if [ -f "atr_levels.json" ]; then
          echo "‚úÖ ATR levels JSON file created successfully"
          echo "üìä File size: $(du -h atr_levels.json | cut -f1)"
          echo "üìã Contents preview:"
          head -30 atr_levels.json
          
          # Show multi-ticker status summary
          echo ""
          echo "üìà Multi-ticker status summary:"
          python -c "
import json
try:
    with open('atr_levels.json', 'r') as f:
        data = json.load(f)
    
    if 'tickers' in data:
        tickers = data['tickers']
        success_count = sum(1 for t in tickers.values() if t.get('status') == 'success')
        error_count = len(tickers) - success_count
        print(f'üìä Total tickers: {len(tickers)}')
        print(f'‚úÖ Successful: {success_count}')
        print(f'‚ùå Errors: {error_count}')
        print('')
        
        # Show details for each ticker
        for ticker_key, ticker_data in tickers.items():
            if ticker_data.get('status') == 'success':
                close = ticker_data.get('reference_close', 'N/A')
                atr = ticker_data.get('reference_atr', 'N/A')
                date = ticker_data.get('reference_date', 'N/A')
                age = ticker_data.get('data_age_days', 0)
                age_warn = f' (‚ö†Ô∏è {age}d old)' if age > 1 else ''
                print(f'‚úÖ {ticker_key}: \${close} (ATR: \${atr}) [{date}]{age_warn}')
            else:
                error = ticker_data.get('error', 'Unknown error')
                print(f'‚ùå {ticker_key}: {error}')
    else:
        # Legacy single ticker format
        print('üìä Legacy single-ticker format detected')
        if data.get('status') == 'success':
            close = data.get('reference_close', 'N/A')
            atr = data.get('reference_atr', 'N/A')
            print(f'‚úÖ Single ticker: \${close} (ATR: \${atr})')
        else:
            print(f'‚ùå Single ticker failed: {data.get(\"error\", \"Unknown error\")}')
        
except Exception as e:
    print(f'‚ùå Error reading JSON: {e}')
    exit(1)
"
        else
          echo "‚ùå ATR levels JSON file not found!"
          exit 1
        fi
    
    - name: Commit updated ATR levels
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add atr_levels.json
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ü§ñ Daily multi-ticker ATR levels update - $(date '+%Y-%m-%d %H:%M UTC')"
          git push
        fi
    
    # Optional: Send notification on failure
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Multi-ticker ATR calculation failed!"
        echo "Check the logs above for details."
        # Add email/Slack notification here if desired
